<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="CommandBase" Id="{5ed0d5bd-0ff5-4097-ae74-31498bed2e22}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC CommandBase IMPLEMENTS ICommand
VAR_IN_OUT
	(* Use Class Properties for IN_OUT Parameters!!! *)
END_VAR
VAR PERSISTENT
	stHandshake		: ST_CommandBaseHandshake;		// Variable Strukture for communication with PCS. Aditional IN and OUT parameters should be declared in the derived implementation.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// OO-Class 
;]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{b3999881-28f7-422e-bf1b-eba84960aef3}">
      <Declaration><![CDATA[// Stops execution of Command 
METHOD PUBLIC Abort
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stHandshake.nResultCode := E_CommandResultCode.Cancelled;
stHandshake.bExecute := FALSE;
stHandshake.bBusy := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="CalculateProgress" Id="{56cdfe0a-40aa-42ba-b29a-961de2363010}">
      <Declaration><![CDATA[METHOD PROTECTED CalculateProgress
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stHandshake.nResultCode = E_CommandResultCode.Done THEN
	stHandshake.nProgress := 100;
ELSE
	stHandshake.nProgress := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Done" Id="{e44fa825-a28e-46f6-bd9b-b7a6061e20a7}">
      <Declaration><![CDATA[METHOD PROTECTED Done
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stHandshake.nResultCode := E_CommandResultCode.Done;
stHandshake.bExecute := FALSE;
stHandshake.bBusy := FALSE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Refresh" Id="{8e66b5e0-e08f-4024-b1ed-2b1412f1580f}">
      <Declaration><![CDATA[// Update the state of the command button. Should be called every cycle.
METHOD PUBLIC Refresh
VAR
	bInit		: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Starting Case
stHandshake.bBusy S= bInit := stHandshake.bExecute AND NOT stHandshake.bBusy;

// Reset Case
IF NOT stHandshake.bExecute AND stHandshake.bBusy THEN
	Abort();
END_IF

// Running Case
IF stHandshake.bExecute AND stHandshake.bBusy THEN
	IF bInit THEN
		stHandshake.nResultCode := E_CommandResultCode.Running;
	END_IF
	
	// Set Task init on First Call
	IF Task(bInit) THEN
		Done();
	END_IF
	
	CalculateProgress();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Task" Id="{6e407172-b849-400a-8c24-c3a1ccb62b55}">
      <Declaration><![CDATA[// Execute the funktional part of the command implementation
METHOD PROTECTED Task : BOOL
VAR_INPUT
	Init 	: BOOL;		// True the first time the Task is called after Execute is started
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Task complete if return true
Task := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="CommandBase">
      <LineId Id="94" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="CommandBase.Abort">
      <LineId Id="11" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="CommandBase.CalculateProgress">
      <LineId Id="5" Count="1" />
      <LineId Id="8" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="CommandBase.Done">
      <LineId Id="9" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="CommandBase.Refresh">
      <LineId Id="40" Count="0" />
      <LineId Id="56" Count="1" />
      <LineId Id="13" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="23" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="CommandBase.Task">
      <LineId Id="10" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>